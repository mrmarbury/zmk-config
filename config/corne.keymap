/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DVK 0
#define ONE   1
#define TWO   2
#define THREE 3

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        tdmod: tdmod {
            compatible = "zmk,behavior-tap-dance";
            label = "TDMOD";
            #binding-cells = <0>;
            bindings = <&kp LC(LALT)>, <&kp LC(LA(LSHFT))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        rsthd {
            // --------------------------------------------------------------------------------------------------------------
            // |  ESC |  '      |  ,<     |  .>     |  P      |  Y  | ## |  F  |  G       |  C      |  R      |  L      | =+  |
            // |  TAB |  LS(A)  |  LC(O)  |  LA(E)  |  LG(U)  |  I  | ## |  D  |  RG(H)   |  RA(T)  |  RC(N)  |  RS(S)  | -_  |
            // |  CA  |  ;      |  Q      |  J      |  K      |  X  | ## |  B  |  M       |  W      |  V      |  Z      | /?  |
            //                            | MO(2)   | MO(1)   | BSP | ## | ENT |  SPC     | MO(3)   |

            bindings = <
&kp ESC  &kp J          &kp C         &kp Y        &kp F        &kp K            &kp G      &kp L        &kp COMMA    &kp U         &kp Q          &kp EQUAL
&kp TAB  &bhm LSHIFT R  &bhm LCTRL S  &bhm LALT T  &bhm LGUI H  &kp D            &kp M      &bhm RGUI N  &bhm RALT A  &bhm RCTRL I  &bhm RSHIFT O  &kp MINUS
&tdmod   &kp SEMICOLON  &kp V         &kp Z        &kp P        &kp B            &kp X      &kp W        &kp PERIOD   &kp SLASH     &kp SQT        &mo 3
                                      &mo 1        &kp E        &kp BACKSPACE    &kp ENTER  &kp SPACE    &mo 2
            >;
        };

        fnums {
            //--------------------------------------------------------------------------------------------------------------
            // |      | [          |  {         | }          | ]          |     | ## |     7 |    8 |    9 |     & | * | + |
            // |      | LSHIFT     |  LC (      | LA )       |  LGUI      |     | ## | RG  4 | RA 5 | RC 6 |  RS $ | % | ^ |
            // |      | left       |   up       |  down      | right      |     | ## |     1 |    2 |    3 |     ! | @ | # |
            // |  MEH | home       |   pgup     |  pgdn      |  end       |     | ## |     0 |    , |    . |     = |   | - | 
            //                                  |            |            |     | ## |       |      |      | 

            bindings = <
&trans  &kp F1          &kp F2         &kp F3        &kp F4            &kp F5        &kp N7        &kp N8        &kp N9         &kp N0                &trans     &trans
&trans  &bhm LSHIFT F6  &bhm LCTRL F7  &bhm LALT F8  &bhm LEFT_GUI F9  &kp F10       &bhm RGUI N4  &bhm RALT N5  &bhm RCTRL N6  &bhm RSHIFT DOLLAR    &trans     &trans
&trans  &kp F11         &kp F12        &kp F13       &kp F14           &kp F15       &kp N1        &kp N2        &kp N3         &kp NON_US_BACKSLASH  &kp GRAVE  &trans
                                       &trans        &trans            &kp DELETE    &trans        &trans        &trans
            >;
        };

        movpar {
            bindings = <
&trans  &kp LEFT_ARROW    &kp UP_ARROW             &kp DOWN_ARROW       &kp RIGHT_ARROW  &trans    &trans        &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &trans  &kp LS(LA(NUMBER_2))
&trans  &bhm LSHIFT HOME  &bhm LEFT_CONTROL PG_UP  &bhm LALT PAGE_DOWN  &bhm LGUI END    &trans    &bhm RGUI F4  &bhm RALT F5       &bhm RCTRL F6    &bhm RSHFT F11         &trans  &trans
&trans  &kp H             &kp J                    &kp K                &kp L            &trans    &trans        &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &trans  &trans
                                                   &trans               &trans           &trans    &trans        &trans             &trans
            >;
        };

        media {
            bindings = <
&trans      &kp C_MUTE        &kp C_VOL_DN  &kp C_VOLUME_UP  &trans        &trans          &bl BL_TOG                         &bl BL_CYCLE                       &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI
&trans      &kp C_PLAY_PAUSE  &kp C_PREV    &kp C_NEXT       &trans        &trans          &rgb_ug RGB_TOG                    &rgb_ug RGB_COLOR_HSB(119,100,50)  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_COLOR_HSB(194,100,50)  &rgb_ug RGB_COLOR_HSB(189,0,100)   &trans           &trans           &trans           &trans
                                            &trans           &trans        &trans          &trans                             &trans                             &trans
            >;
        };
    };
};
