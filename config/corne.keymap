/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DVK 0
#define ONE   1
#define TWO   2
#define THREE 3

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvk_layer {
            // --------------------------------------------------------------------------------------------------------------
            // |  ESC |  '      |  ,<     |  .>     |  P      |  Y  | ## |  F  |  G       |  C      |  R      |  L      | =+  |
            // |  TAB |  LS(A)  |  LC(O)  |  LA(E)  |  LG(U)  |  I  | ## |  D  |  RG(H)   |  RA(T)  |  RC(N)  |  RS(S)  | -_  |
            // |  CA  |  ;      |  Q      |  J      |  K      |  X  | ## |  B  |  M       |  W      |  V      |  Z      | /?  |
            //                            | MO(2)   | MO(1)   | BSP | ## | ENT |  SPC     | MO(3)   |

            bindings = <
&kp ESC       &kp SQT        &kp COMMA     &kp DOT      &kp P        &kp Y        &kp F    &kp G        &kp C        &kp R         &kp L          &kp EQUAL
&kp TAB       &bhm LSHIFT A  &bhm LCTRL O  &bhm LALT E  &bhm LGUI U  &kp I        &kp D    &bhm RGUI H  &bhm RALT T  &bhm RCTRL N  &bhm RSHIFT S  &kp MINUS
&kp LC(LALT)  &kp SEMI       &kp Q         &kp J        &kp K        &kp X        &kp B    &kp M        &kp W        &kp V         &kp Z          &kp SLASH
                                           &kp LGUI     &mo 1        &kp SPACE    &kp RET  &mo 2        &mo 3
            >;
        };

        one_layer {
            //--------------------------------------------------------------------------------------------------------------
            // |      | [          |  {         | }          | ]          |     | ## |     7 |    8 |    9 |     & | * | + |
            // |      | LSHIFT     |  LC (      | LA )       |  LGUI      |     | ## | RG  4 | RA 5 | RC 6 |  RS $ | % | ^ |
            // |      | left       |   up       |  down      | right      |     | ## |     1 |    2 |    3 |     ! | @ | # |
            // |  MEH | home       |   pgup     |  pgdn      |  end       |     | ## |     0 |    , |    . |     = |   | - | 
            //                                  |            |            |     | ## |       |      |      | 

            bindings = <
&trans  &kp LBKT          &kp LBRC         &kp RBRC            &kp RBKT   &trans        &kp N7        &kp N8        &kp N9         &kp N0              &kp ASTERISK  &kp PLUS
&trans  &bhm LSHIFT LEFT  &bhm LCTRL LPAR  &bhm LALT RPAR      &kp LGUI   &trans        &bhm RGUI N4  &bhm RALT N5  &bhm RCTRL N6  &bhm RSHIFT DOLLAR  &kp PERCENT   &kp CARET
&trans  &kp HOME          &kp UP           &kp DOWN            &kp RIGHT  &trans        &kp N1        &kp N2        &kp N3         &kp EXCLAMATION     &kp AT        &kp HASH
                                           &kp LC(LA(LSHIFT))  &kp HOME   &kp PGi_UP    &kp PG_DN     &kp END       &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
